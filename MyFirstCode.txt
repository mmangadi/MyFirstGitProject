Hello World
Lets Start the Git step by step
1. configuration
	PS C:\Users\Manjunath> git config --global user.name "Manjunath"
	PS C:\Users\Manjunath> git config --global user.email "manjunath.angadi4846@gmail.com"
	PS C:\Users\Manjunath> git config --global --list
	user.name=Manjunath
	user.email=manjunath.angadi4846@gmail.com
	PS C:\Users\Manjunath>

2. Git init to make our project as repository
	D:\MyFirstGitProject>git init
	Initialized empty Git repository in D:/MyFirstGitProject/.git/
	D:\MyFirstGitProject>git status
	On branch master
	No commits yet
	nothing to commit (create/copy files and use "git add" to track)
	
3. Create a new Repository with branch name other than master	
	D:\MyFirstGitProject>git init -b main
	Initialized empty Git repository in D:/MyFirstGitProject/.git/
	D:\MyFirstGitProject>git status       
	On branch main
	No commits yet
	nothing to commit (create/copy files and use "git add" to track)
	
4. How to add the files	
	D:\MyFirstGitProject>git status       
	On branch main
	No commits yet
	Untracked files:
	  (use "git add <file>..." to include in what will be committed)
			MyFirstCode.txt
	nothing added to commit but untracked files present (use "git add" to track)

	D:\MyFirstGitProject>git add MyFirstCode.txt
	D:\MyFirstGitProject>git status
	On branch main
	No commits yet
	Changes to be committed:
	  (use "git rm --cached <file>..." to unstage)
			new file:   MyFirstCode.txt
			
5. to check the commits use git log
	D:\MyFirstGitProject>git log
	fatal: your current branch 'main' does not have any commits yet

6. Commit
	D:\MyFirstGitProject>git commit -m "My first commit"
	[main (root-commit) b0ea06a] My first commit
	 1 file changed, 1 insertion(+)
	 create mode 100644 MyFirstCode.txt

	D:\MyFirstGitProject>git status
	On branch main
	nothing to commit, working tree clean
	
7. Working directory -> staging area -> commit
	when we do any changes to the code initially changes will be there in only working directory -> we to add it to staging area using git add <filename> -> git commit

8. If we want skip the staging and directly commit we can use below command
	git commit -a-m "message"
    Ex: D:\MyFirstGitProject>git commit -a -m "skip the staging and commit"
    [main 039b3f4] skip the staging and commit
    1 file changed, 3 insertions(+)

9. To check changes made we can use below command
    D:\MyFirstGitProject>git diff 
    diff --git a/MyFirstCode.txt b/MyFirstCode.txt
    index 0b21e0b..0a94406 100644
    --- a/MyFirstCode.txt
    +++ b/MyFirstCode.txt
    @@ -62,4 +62,6 @@ Lets Start the Git step by step
            git commit -a-m "message"
        Ex: D:\MyFirstGitProject>git commit -a -m "skip the staging and commit"
        [main 039b3f4] skip the staging and commit
    -    1 file changed, 3 insertions(+)
    \ No newline at end of file
    +    1 file changed, 3 insertions(+)
    +
    +9. 
    \ No newline at end of file
    :

10. How to check the difference when we move the changes from working directory to stagging
    use git diff --staged
    Ex: D:\MyFirstGitProject>git diff --staged
    diff --git a/MyFirstCode.txt b/MyFirstCode.txt
    index ce26a84..4dc7741 100644
    --- a/MyFirstCode.txt
    +++ b/MyFirstCode.txt
    @@ -80,4 +80,7 @@ Lets Start the Git step by step
        +
        +9.
        \ No newline at end of file
    -    :
    \ No newline at end of file
    +    :
    +
    +10. How to check the difference when we move the changes from working directory to stagging
    +    use git diff --staged

11. Git add all files command
    D:\MyFirstGitProject>git add .
    D:\MyFirstGitProject>git status
    On branch main
    Changes to be committed:
    (use "git restore --staged <file>..." to unstage)
            new file:   Creds.txt
            deleted:    GITCHEATSHEET.txt
            modified:   MyFirstCode.txt
            new file:   Readme.md

12. Git remove committed file from git and keep it working direcory
    D:\MyFirstGitProject>git rm --cached Creds.txt
    rm 'Creds.txt'
